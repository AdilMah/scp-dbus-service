/*
 * Generated by gdbus-codegen 2.56.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __NEWPRINTERDIALOG_DBUS_H__
#define __NEWPRINTERDIALOG_DBUS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.test.Printing */

#define NEWPRINTERDIALOG_DBUS_TYPE_PRINTING (newprinterdialog_dbus_printing_get_type ())
#define NEWPRINTERDIALOG_DBUS_PRINTING(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING, NewPrinterDialogDBusPrinting))
#define NEWPRINTERDIALOG_DBUS_IS_PRINTING(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING))
#define NEWPRINTERDIALOG_DBUS_PRINTING_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING, NewPrinterDialogDBusPrintingIface))

struct _NewPrinterDialogDBusPrinting;
typedef struct _NewPrinterDialogDBusPrinting NewPrinterDialogDBusPrinting;
typedef struct _NewPrinterDialogDBusPrintingIface NewPrinterDialogDBusPrintingIface;

struct _NewPrinterDialogDBusPrintingIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_change_ppd) (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation,
    guint arg_xid,
    const gchar *arg_name,
    const gchar *arg_device_id);

  gboolean (*handle_download_driver_for_device_id) (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation,
    guint arg_xid,
    const gchar *arg_device_id);

  gboolean (*handle_new_printer_from_device) (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation,
    guint arg_xid,
    const gchar *arg_device_uri,
    const gchar *arg_device_id);

  gboolean (*handle_on_dialog_canceled) (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_on_driver_download_checked) (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_installed_files);

  gboolean (*handle_on_printer_added) (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name);

  gboolean (*handle_on_printer_modified) (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name,
    gboolean arg_ppd_has_changed);

  void (*dialog_canceled) (
    NewPrinterDialogDBusPrinting *object);

  void (*driver_download_cheked) (
    NewPrinterDialogDBusPrinting *object);

  void (*printer_added) (
    NewPrinterDialogDBusPrinting *object);

  void (*printer_modified) (
    NewPrinterDialogDBusPrinting *object);

};

GType newprinterdialog_dbus_printing_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *newprinterdialog_dbus_printing_interface_info (void);
guint newprinterdialog_dbus_printing_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void newprinterdialog_dbus_printing_complete_new_printer_from_device (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation);

void newprinterdialog_dbus_printing_complete_download_driver_for_device_id (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation);

void newprinterdialog_dbus_printing_complete_change_ppd (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation);

void newprinterdialog_dbus_printing_complete_on_dialog_canceled (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation);

void newprinterdialog_dbus_printing_complete_on_printer_added (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation);

void newprinterdialog_dbus_printing_complete_on_printer_modified (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation);

void newprinterdialog_dbus_printing_complete_on_driver_download_checked (
    NewPrinterDialogDBusPrinting *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void newprinterdialog_dbus_printing_emit_dialog_canceled (
    NewPrinterDialogDBusPrinting *object);

void newprinterdialog_dbus_printing_emit_printer_added (
    NewPrinterDialogDBusPrinting *object);

void newprinterdialog_dbus_printing_emit_printer_modified (
    NewPrinterDialogDBusPrinting *object);

void newprinterdialog_dbus_printing_emit_driver_download_cheked (
    NewPrinterDialogDBusPrinting *object);



/* D-Bus method calls: */
void newprinterdialog_dbus_printing_call_new_printer_from_device (
    NewPrinterDialogDBusPrinting *proxy,
    guint arg_xid,
    const gchar *arg_device_uri,
    const gchar *arg_device_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean newprinterdialog_dbus_printing_call_new_printer_from_device_finish (
    NewPrinterDialogDBusPrinting *proxy,
    GAsyncResult *res,
    GError **error);

gboolean newprinterdialog_dbus_printing_call_new_printer_from_device_sync (
    NewPrinterDialogDBusPrinting *proxy,
    guint arg_xid,
    const gchar *arg_device_uri,
    const gchar *arg_device_id,
    GCancellable *cancellable,
    GError **error);

void newprinterdialog_dbus_printing_call_download_driver_for_device_id (
    NewPrinterDialogDBusPrinting *proxy,
    guint arg_xid,
    const gchar *arg_device_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean newprinterdialog_dbus_printing_call_download_driver_for_device_id_finish (
    NewPrinterDialogDBusPrinting *proxy,
    GAsyncResult *res,
    GError **error);

gboolean newprinterdialog_dbus_printing_call_download_driver_for_device_id_sync (
    NewPrinterDialogDBusPrinting *proxy,
    guint arg_xid,
    const gchar *arg_device_id,
    GCancellable *cancellable,
    GError **error);

void newprinterdialog_dbus_printing_call_change_ppd (
    NewPrinterDialogDBusPrinting *proxy,
    guint arg_xid,
    const gchar *arg_name,
    const gchar *arg_device_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean newprinterdialog_dbus_printing_call_change_ppd_finish (
    NewPrinterDialogDBusPrinting *proxy,
    GAsyncResult *res,
    GError **error);

gboolean newprinterdialog_dbus_printing_call_change_ppd_sync (
    NewPrinterDialogDBusPrinting *proxy,
    guint arg_xid,
    const gchar *arg_name,
    const gchar *arg_device_id,
    GCancellable *cancellable,
    GError **error);

void newprinterdialog_dbus_printing_call_on_dialog_canceled (
    NewPrinterDialogDBusPrinting *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean newprinterdialog_dbus_printing_call_on_dialog_canceled_finish (
    NewPrinterDialogDBusPrinting *proxy,
    GAsyncResult *res,
    GError **error);

gboolean newprinterdialog_dbus_printing_call_on_dialog_canceled_sync (
    NewPrinterDialogDBusPrinting *proxy,
    GCancellable *cancellable,
    GError **error);

void newprinterdialog_dbus_printing_call_on_printer_added (
    NewPrinterDialogDBusPrinting *proxy,
    const gchar *arg_name,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean newprinterdialog_dbus_printing_call_on_printer_added_finish (
    NewPrinterDialogDBusPrinting *proxy,
    GAsyncResult *res,
    GError **error);

gboolean newprinterdialog_dbus_printing_call_on_printer_added_sync (
    NewPrinterDialogDBusPrinting *proxy,
    const gchar *arg_name,
    GCancellable *cancellable,
    GError **error);

void newprinterdialog_dbus_printing_call_on_printer_modified (
    NewPrinterDialogDBusPrinting *proxy,
    const gchar *arg_name,
    gboolean arg_ppd_has_changed,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean newprinterdialog_dbus_printing_call_on_printer_modified_finish (
    NewPrinterDialogDBusPrinting *proxy,
    GAsyncResult *res,
    GError **error);

gboolean newprinterdialog_dbus_printing_call_on_printer_modified_sync (
    NewPrinterDialogDBusPrinting *proxy,
    const gchar *arg_name,
    gboolean arg_ppd_has_changed,
    GCancellable *cancellable,
    GError **error);

void newprinterdialog_dbus_printing_call_on_driver_download_checked (
    NewPrinterDialogDBusPrinting *proxy,
    GVariant *arg_installed_files,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean newprinterdialog_dbus_printing_call_on_driver_download_checked_finish (
    NewPrinterDialogDBusPrinting *proxy,
    GAsyncResult *res,
    GError **error);

gboolean newprinterdialog_dbus_printing_call_on_driver_download_checked_sync (
    NewPrinterDialogDBusPrinting *proxy,
    GVariant *arg_installed_files,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_PROXY (newprinterdialog_dbus_printing_proxy_get_type ())
#define NEWPRINTERDIALOG_DBUS_PRINTING_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_PROXY, NewPrinterDialogDBusPrintingProxy))
#define NEWPRINTERDIALOG_DBUS_PRINTING_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_PROXY, NewPrinterDialogDBusPrintingProxyClass))
#define NEWPRINTERDIALOG_DBUS_PRINTING_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_PROXY, NewPrinterDialogDBusPrintingProxyClass))
#define NEWPRINTERDIALOG_DBUS_IS_PRINTING_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_PROXY))
#define NEWPRINTERDIALOG_DBUS_IS_PRINTING_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_PROXY))

typedef struct _NewPrinterDialogDBusPrintingProxy NewPrinterDialogDBusPrintingProxy;
typedef struct _NewPrinterDialogDBusPrintingProxyClass NewPrinterDialogDBusPrintingProxyClass;
typedef struct _NewPrinterDialogDBusPrintingProxyPrivate NewPrinterDialogDBusPrintingProxyPrivate;

struct _NewPrinterDialogDBusPrintingProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  NewPrinterDialogDBusPrintingProxyPrivate *priv;
};

struct _NewPrinterDialogDBusPrintingProxyClass
{
  GDBusProxyClass parent_class;
};

GType newprinterdialog_dbus_printing_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (NewPrinterDialogDBusPrintingProxy, g_object_unref)
#endif

void newprinterdialog_dbus_printing_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
NewPrinterDialogDBusPrinting *newprinterdialog_dbus_printing_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
NewPrinterDialogDBusPrinting *newprinterdialog_dbus_printing_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void newprinterdialog_dbus_printing_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
NewPrinterDialogDBusPrinting *newprinterdialog_dbus_printing_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
NewPrinterDialogDBusPrinting *newprinterdialog_dbus_printing_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_SKELETON (newprinterdialog_dbus_printing_skeleton_get_type ())
#define NEWPRINTERDIALOG_DBUS_PRINTING_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_SKELETON, NewPrinterDialogDBusPrintingSkeleton))
#define NEWPRINTERDIALOG_DBUS_PRINTING_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_SKELETON, NewPrinterDialogDBusPrintingSkeletonClass))
#define NEWPRINTERDIALOG_DBUS_PRINTING_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_SKELETON, NewPrinterDialogDBusPrintingSkeletonClass))
#define NEWPRINTERDIALOG_DBUS_IS_PRINTING_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_SKELETON))
#define NEWPRINTERDIALOG_DBUS_IS_PRINTING_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NEWPRINTERDIALOG_DBUS_TYPE_PRINTING_SKELETON))

typedef struct _NewPrinterDialogDBusPrintingSkeleton NewPrinterDialogDBusPrintingSkeleton;
typedef struct _NewPrinterDialogDBusPrintingSkeletonClass NewPrinterDialogDBusPrintingSkeletonClass;
typedef struct _NewPrinterDialogDBusPrintingSkeletonPrivate NewPrinterDialogDBusPrintingSkeletonPrivate;

struct _NewPrinterDialogDBusPrintingSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  NewPrinterDialogDBusPrintingSkeletonPrivate *priv;
};

struct _NewPrinterDialogDBusPrintingSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType newprinterdialog_dbus_printing_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (NewPrinterDialogDBusPrintingSkeleton, g_object_unref)
#endif

NewPrinterDialogDBusPrinting *newprinterdialog_dbus_printing_skeleton_new (void);


G_END_DECLS

#endif /* __NEWPRINTERDIALOG_DBUS_H__ */
